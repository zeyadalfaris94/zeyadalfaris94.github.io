{"version":3,"sources":["webpack:///./src/templates/blogPostTemplate.js"],"names":["Template","data","BlogPostTitleStyle","styled","h1","DateSectionStyle","span","markdownRemark","frontmatter","html","className","title","dangerouslySetInnerHTML","__html","dateTime","date","pageQuery"],"mappings":"6FAAA,0IAMe,SAASA,EAAT,GAEX,IADFC,EACC,EADDA,KAEMC,EAAqBC,IAAOC,GAAV,uFAAGD,CAAH,yBAIlBE,EAAmBF,IAAOG,KAAV,qFAAGH,CAAH,yEASdI,EAAmBN,EAAnBM,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,kBAACR,EAAD,KAAqBM,EAAYG,OACjC,yBACED,UAAU,oBAEVE,wBAAyB,CAAEC,OAAQJ,KAGrC,kBAACJ,EAAD,gBAEG,IACD,0BAAMS,SAAUN,EAAYO,MAAOP,EAAYO,UAOpD,IAAMC,EAAS","file":"component---src-templates-blog-post-template-js-e67cf163eb62ab1fcbe8.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/layout';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const BlogPostTitleStyle = styled.h1`\n    margin-bottom: 1rem;\n  `;\n\n  const DateSectionStyle = styled.span`\n    font-weight: 800;\n    opacity: 0.6;\n    font-size: 0.9rem;\n\n    time {\n      font-weight: 500;\n    }\n  `;\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <Layout>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <BlogPostTitleStyle>{frontmatter.title}</BlogPostTitleStyle>\n          <div\n            className=\"blog-post-content\"\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n\n          <DateSectionStyle>\n              Updated:\n            {' '}\n            <time dateTime={frontmatter.date}>{frontmatter.date}</time>\n          </DateSectionStyle>\n        </div>\n      </div>\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}